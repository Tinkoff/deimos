package ru.tinkoff.deimos

import ru.tinkoff.deimos.schema.classes.namespaces.xsdUri

package object structure {
  val simpleTypesMap: Map[GlobalName, String] = Map(
    GlobalName(xsdUri, "string")             -> "String",
    GlobalName(xsdUri, "normalizedString")   -> "String",
    GlobalName(xsdUri, "token")              -> "String",
    GlobalName(xsdUri, "base64Binary")       -> "String",
    GlobalName(xsdUri, "hexBinary")          -> "String",
    GlobalName(xsdUri, "integer")            -> "Int",
    GlobalName(xsdUri, "positiveInteger")    -> "Int",
    GlobalName(xsdUri, "negativeInteger")    -> "Int",
    GlobalName(xsdUri, "nonNegativeInteger") -> "Int",
    GlobalName(xsdUri, "nonPositiveInteger") -> "Int",
    GlobalName(xsdUri, "long")               -> "Long",
    GlobalName(xsdUri, "unsignedLong")       -> "Long",
    GlobalName(xsdUri, "int")                -> "Int",
    GlobalName(xsdUri, "unsignedInt")        -> "Int",
    GlobalName(xsdUri, "short")              -> "Short",
    GlobalName(xsdUri, "unsignedShort")      -> "Short",
    GlobalName(xsdUri, "byte")               -> "Byte",
    GlobalName(xsdUri, "unsignedByte")       -> "Byte",
    GlobalName(xsdUri, "decimal")            -> "Double",
    GlobalName(xsdUri, "float")              -> "Float",
    GlobalName(xsdUri, "double")             -> "Double",
    GlobalName(xsdUri, "boolean")            -> "Boolean",
    GlobalName(xsdUri, "duration")           -> "String",
    GlobalName(xsdUri, "dateTime")           -> "String",
    GlobalName(xsdUri, "date")               -> "String",
    GlobalName(xsdUri, "time")               -> "String",
    GlobalName(xsdUri, "gYear")              -> "String",
    GlobalName(xsdUri, "gYearMonth")         -> "String",
    GlobalName(xsdUri, "gMonth")             -> "String",
    GlobalName(xsdUri, "gMonthDay")          -> "String",
    GlobalName(xsdUri, "gDay")               -> "String",
    GlobalName(xsdUri, "Name")               -> "String",
    GlobalName(xsdUri, "QName")              -> "String",
    GlobalName(xsdUri, "NCName")             -> "String",
    GlobalName(xsdUri, "anyURI")             -> "String",
    GlobalName(xsdUri, "language")           -> "String",
    GlobalName(xsdUri, "ID")                 -> "String",
    GlobalName(xsdUri, "IDREF")              -> "String",
    GlobalName(xsdUri, "IDREFS")             -> "String",
    GlobalName(xsdUri, "ENTITY")             -> "String",
    GlobalName(xsdUri, "ENTITIES")           -> "String",
    GlobalName(xsdUri, "NOTATION")           -> "String",
    GlobalName(xsdUri, "NMTOKEN")            -> "String",
    GlobalName(xsdUri, "NMTOKENS")           -> "String",
    GlobalName(xsdUri, "anyType")            -> "String",
  )
}
